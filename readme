1. Enable Nomad secrets engine in Vault
    cmd:
        vault secrets enable nomad
        vault write nomad/config/lease ttl=3600 max_ttl=86400
2. Create and apply a Nomad ACL policy that defines the permissions the user's token will have in Nomad
    cmd:
        nomad acl policy apply -description "Application Developer policy" app-dev nomad-appdev-policy.hcl
3. Create a Vault policy that allows the user to use the Nomad secrets engine to generate a token. See nomad-secrets-policy.hcl
    cmd:
        vault policy write vault-nomad-secrets-policy vault-nomad-secrets-policy.hcl
4. Enable user pass secrets engine in Vault and create a user. Note: Vault dynamic provider creds do not support dynamic secrets engines like Nomad secrets engine.
Therefore, TFE/C cannot leverage Vault dynamic providers credentials to provision a Nomad ACL and submit a job in a repeatable manner.
https://developer.hashicorp.com/terraform/cloud-docs/workspaces/dynamic-provider-credentials/vault-configuration#vault-provider-configuration 
    cmd:
        vault auth enable userpass
        vault write auth/userpass/users/bruce.wayne \
        password=batman \
        policies=vault-nomad-secrets-policy
5. Write the Nomad jobspec. See example: hello-world.job.hcl
6. Write Terraform config file that creates the following:
    a. Vault Nomad secrets engine role for the TFE/C workspace and assign the desired Nomad ACL policy 
    b. Nomad ACL token to use for the job submission
    c. Nomad job from the provided jobspec file
    d. Requisite variables, outputs and provider configs. Note the identity authenticating to the Vault provider should be assigned to the vault-nomad-secrets-policy  
7. Create TFE workspace, manually set up variables and then apply OR publish to PMR as a no-code module and provision a workspace.
